brand_mapping_classification_task:
  description: >
    Analyze the following brand details and classify it into an appropriate industry type.
    The industry type should be chosen from one of the following categories: 
    Automobiles, Electronics, Finance and Banking, Ecommerce, Entertainment and Media, 
    Food and Beverages, Gaming. If none of these categories match, the LLM should predict the industry type.

    Input Fields (Brand Details):
    - Brand Name: {brand_name}
    - Website: {website}
    - Brand Description: {brand_description} (if provided)
    - Product: {product_name} (if provided)
    - Product Description: {product_description} (if provided)
  expected_output: >
    The attribute "industry": "classified industry type" should be retrieved back.
    
  agent: brand_mapping_agent

audience_identification_task:

  description: >
    Create an audience profile  specific to {brand_name} {brand_description} and data.
    The industry is retrieved from the ##brand_mapping_classification_task output.
    Analyze text inputs to extract demographic signals and psychographic traits.
    Provide relevant outputs directly relating to and about the {brand_name}.
  expected_output: >
    A list of the following attributes :
      "age_range": [number greater than or equal to 18, number greater than or equal to 18], 
      "gender": ["male"/"female"/"if both male and female then both"],
      "location": "appropriate global geographic areas pertaining to {brand_name} at a specific city level. This can be a list of top N cities strongly related to {brand_name}",
      "psychographic_traits": ["array", "of", "traits"],
      "interests": ["array", "of", "interests", "associated with {brand_name}"]
  agent: audience_identification_agent

channel_recommendation_task:
  description: >
    Recommend the most suitable advertising channels to run profitable campaigns
    for {brand_name} to reach its target audience in a particular industry. 
    Recommend the best channels amongst only the integrated channels from ['Google','Linkedin','Meta','Shopify']
    where running campaigns will maximise the {brand_name} profitability and success of the
    campaign. The target audience is retrieved from the audience_identification agent and industry is retrieved
    from the brand_mapping_classification_task output. Combine the outputs of all the agents along
    with the recommended channels

  expected_output: >
    List of recommended channels from the input integrated channels ['Google','Linkedin','Meta','Shopify']

  agent: channel_recommendation_agent

schedule_recommendation_task:
  description: >
    Analyze the {brand_name} objectives, industry, audience target group and the recommended 
    ad channls (these are retrieved from the previous context set agents) to recommend
    an optimal campaign schedule which will maximise the performance of the campaigns running
    for {brand_name}. Use the current date from the CurrentDateTool to schedule the campaign.
    The campaign should be scheduled for the future from the current date. Do not use dates that are in the past.

  expected_output: >
    List of expected recommended campaign start date and campaign end date
    in DD-MM-YYYY format. 

  agent: schedule_recommendation_agent

budget_allocation_task:
  description: >
    Analyze the {brand_name} information created from the other agents such as Audience target group,
    industry, recommended channels and campaign schedule to recommend a daily budget to run the campaigns
    as well as the optimized allocation of this budget across the recommended channels in INR.
  
  expected_output: >
    total_budget: the total daily budget predicted to run a campaign based on the previous outputs
    channel_budget_allocation: a dictionary with the recommended channel names as keys and their respective daily budget allocations in INR

  agent: budget_allocation_agent
  
campaign_name_recommendation_task:
  description: >
    Generate a creative campaign name based on the {brand_name} and its objective, target audience, and start date.
    Concatenate each important detail by '_' while generating the campaign_name.
  
  expected_output: >
    A unique campaign name (e.g., 'Summer2024_GenZ_Fashion_Blitz').

  agent: campaign_name_recommendation_agent












